{"version":3,"sources":["../../src/rpc/JrpcClient.ts","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/base/baseInjectedProvider.ts","../../src/providers/injectedProviders/base/providerHandlers.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../../src/providers/injectedProviders/slope/providerHandlers.ts","../../src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../../src/providers/injectedProviders/solflare/providerHandlers.ts","../../src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../../src/providers/injectedProviders/sollet/providerHandlers.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts","../../src/utils/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/utils/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction/constants.ts","../../src/transaction/expiry-custom-errors.ts","../../src/layout.ts","../../src/utils/shortvec-encoding.ts","../../src/message/legacy.ts","../../src/transaction/legacy.ts","../../src/utils/assert.ts","../../src/sysvar.ts","../../src/utils/send-and-confirm-transaction.ts","../../src/utils/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/utils/bigint.ts","../../src/nonce-account.ts","../../src/programs/system.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/programs/address-lookup-table/state.ts","../../src/account-data.ts","../../src/utils/url-impl.ts","../../src/connection.ts","../../src/utils/makeWebsocketUrl.ts","../../src/keypair.ts","../../src/programs/address-lookup-table/index.ts","../../src/programs/compute-budget.ts","../../src/programs/ed25519.ts","../../src/programs/secp256k1.ts","../../src/programs/stake.ts","../../src/programs/vote.ts","../../src/validator-info.ts","../../src/vote-account.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@web3auth/solana-provider/node_modules/rpc-websockets/dist/index.browser.js","../node_modules/@web3auth/solana-provider/node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/@web3auth/solana-provider/node_modules/rpc-websockets/dist/lib/client.js"],"names":["req","res","end","next","chainId","mergeMiddleware","createChainIdMiddleware","createProviderConfigMiddleware","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","createConfigMiddleware","getAccounts","createAsyncMiddleware","method","accounts","response","requestAccounts","handler","result","getSecretKey","createRequestAccountsMiddleware","createGetAccountsMiddleware","createGenericJRPCMiddleware","constructor","state","config","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","switchChain","Promise","setupProvider","engine","providerHandlers","solanaMiddleware","createSolanaMiddleware","configMiddleware","injectedProviderProxy","provider","providerFromEngine","lookupNetwork","getInjectedProviderProxy","getBaseProviderHandlers","injectedProvider","bs58","getPrivateKey","ethErrors","signTransaction","transaction","signMessage","sigData","signAllTransactions","signAndSendTransaction","txRes","signature","getProviderHandlers","createInjectedProviderProxyMiddleware","data","txMessage","message","publicKey","getProviderEngineProxy","code","params","conn","allTxns","length","unsignedTx","i","getSlopeHandlers","solflareProviderHandlers","getSolflareHandlers","getSolletHandlers","getTorusHandlers","transactions","connectedChainId","connectedHexChainId","isHexStrict","parseInt","WalletInitializationError","setupEngine","handleInjectedProviderUpdate","_objectSpread","keyPairGenerator","Keypair","Buffer","keyPair","signedMsg","nacl","_providerEngineProxy","sig","txns","enable","privKey","createJsonRpcClient","updateAccount","health","getChainSwitchMiddleware","chainSwitchHandlers","addNewChainConfig","nativeCurrency","rpcUrls","ticker","tickerName","displayName","blockExplorer","switchSolanaChain","createChainSwitchMiddleware","getAccountMiddleware","accountHandlers","updatePrivatekey","privateKey","createAccountMiddleware","SolanaPrivateKeyProvider","providerFactory","SolanaWallet","signedTransaction","signedTransactions","request","toBuffer","arr","assert","val","msg","Error","equal","l","r","Object","create","inherits_browserModule","ctor","superCtor","super_","prototype","value","enumerable","writable","configurable","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","charCodeAt","htonl","w","zero2","word","zero8","utils","enc","Array","isArray","slice","replace","push","p","c","toString","endian","start","len","k","m","b","a","d","e","buf","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","BlockHash","this","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","common","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","t","rotr32","ch32","x","y","z","maj32","p32","s","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","call","h","W","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","f","g","T1","T2","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","key","Hash","inner","outer","_init","exports","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","join","String","fromCharCode","_checkNormalize","HEX","Logger","version","defineProperty","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","_log","levels","DEBUG","INFO","WARNING","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","Uint8Array","hex","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","name","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","censorship","permanent","globalLogger","warn","logger","addSlice","array","arguments","isInteger","arrayify","options","checkSafeUint53","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","v","isBytes","encode","serialize","SOLANA_SCHEMA","decode","deserialize","decodeUnchecked","deserializeUnchecked","Map","_bn","isPublicKeyData","decoded","equals","eq","toBase58","toJSON","toBytes","toArrayLike","zeroPad","createWithSeed","buffer","fromPublicKey","programId","PublicKey","createProgramAddressSync","seeds","seed","publicKeyBytes","is_on_curve","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","address","err","findProgramAddress","isOnCurve","default","fields","naclLowLevel","chk","den","den2","den4","den6","neq25519","gf1","I","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","timeoutSeconds","TransactionExpiredTimeoutError","property","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","str","getAlloc","type","getItemAlloc","item","field","alloc","decodeLength","size","elem","encodeLength","rem_len","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","isAccountSigner","index","isAccountWritable","numRequiredSignatures","isProgramId","has","programIds","nonProgramIds","filter","numKeys","keyCount","shortvec","map","instruction","programIdIndex","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","Layout","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","signData","from","byteArray","accountCount","dataSlice","Message","TransactionStatus","DEFAULT_SIGNATURE","opts","isWritable","pubkey","isSigner","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","add","items","TransactionInstruction","compileMessage","accountMetas","accountMeta","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","compiledInstructions","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","getEstimatedFee","connection","setSigners","seen","sign","uniqueSigners","signer","_partialSign","partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","Transaction","populate","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendOptions","skipPreflight","preflightCommitment","maxRetries","minContextSlot","status","sleep","ms","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","NonceAccount","u64","layout","blob","encodeDecode","bigIntLayout","src","toBigIntLE","toBufferLE","bigInt","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","createAccount","lamports","space","transfer","BigInt","assign","base","createAccountWithSeed","createNonceAccount","SystemProgram","fromPubkey","newAccountPubkey","basePubkey","initParams","noncePubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","getMinNumSignatures","Math","Loader","load","balanceNeeded","program","programInfo","accountPubkey","payer","toPubkey","sendAndConfirmTransaction","commitment","dataLayout","chunkSize","offset","bytesLength","bytesLengthPadding","objToString","objKeys","obj","isArrayProp","max","propVal","toStr","sort","undefined","isFinite","returnVal","trailingZeros","n","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","slot","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","logs","customMessage","globalThis","isActive","U64_MAX","deactivationSlot","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","accountData","numSerializedAddresses","addresses","lastExtendedSlot","lastExtendedSlotStartIndex","authority","URL","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","context","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","executable","owner","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","readonly","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","_commitment","_confirmTransactionInitialTimeout","_rpcEndpoint","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","Set","client","wsEndpoint","httpHeaders","fetch","disableRetryOnRateLimit","endpoint","useHttps","Number","makeWebsocketUrl","customFetch","fetchWithMiddleware","init","modifiedInfo","reject","modifiedFetchArgs","clientBrowser","body","agent","headers","too_many_requests_retries","waitTime","statusText","text","callback","createRpcClient","requests","batch","createRpcBatchRequest","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","bind","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","_buildArgs","unsafeRes","SolanaJSONRPCError","getBalance","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","_args","ownerAddress","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getAccountInfo","getMultipleAccountsInfoAndContext","publicKeys","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configWithoutEncoding","encoding","getParsedProgramAccounts","confirmTransaction","rawSignature","strategy","decodedSignature","subscriptionCommitment","done","confirmationPromise","subscriptionId","__type","expiryPromise","timeoutMs","timeoutId","checkBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","outcome","clearTimeout","removeSignatureListener","getClusterNodes","getVoteAccounts","getSlot","getSlotLeader","getSlotLeaders","startSlot","getSignatureStatus","getSignatureStatuses","values","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getEpochInfo","getEpochSchedule","epochSchedule","EpochSchedule","getLeaderSchedule","getMinimumBalanceForRentExemption","getRecentBlockhashAndContext","getRecentPerformanceSamples","limit","getFeeCalculatorForBlockhash","getFeeForMessage","wireMessage","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","getBlockHeight","getBlockProduction","configOrCommitment","rest","extra","getTransaction","getParsedTransaction","getParsedTransactions","methodName","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","transactionDetails","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","highestConfirmedRoot","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","getSignaturesForAddress","getAddressLookupTable","accountInfo","AddressLookupTableAccount","getNonceAndContext","getNonce","requestAirdrop","to","_blockhashWithExpiryBlockHeight","timeSinceFetch","Date","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","MS_PER_SLOT","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","originalTx","disableCache","includes","encodedTransaction","includeAccounts","logTrace","traceIndent","SendTransactionError","sendTransaction","sendRawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","clearInterval","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbacks","cb","_makeSubscription","clientSubscriptionId","fastStableStringify","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","notification","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","dispose","override","onSignature","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","_keypair","keypair","secretKey","generate","fromSecretKey","encoder","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","createLookupTable","recentSlot","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","AddressLookupTableProgram","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","microLamports","ComputeBudgetProgram","ED25519_INSTRUCTION_LAYOUT","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPrivateKey","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","publicKeyToEthAddress","sha3","Secp256k1Program","ethAddress","recoveryId","createInstructionWithEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","publicKeyCreate","messageHash","recid","STAKE_CONFIG_ID","unixTimestamp","custodian","Lockup","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","initialize","lockup","staker","withdrawer","stakePubkey","delegate","authorize","custodianPubkey","newAuthorized","newAuthorizedPubkey","stakeAuthorizationType","authorizeWithSeed","authoritySeed","authorityOwner","splitInstruction","split","splitWithSeed","splitStakePubkey","merge","withdraw","deactivate","StakeProgram","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","initializeAccount","voteInit","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","VoteProgram","website","details","keybaseUsername","module","BN","isBN","negative","words","red","wordSize","window","require","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","min","move","dest","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","ceil","_strip","limbLen","limbPow","mod","imuln","_iaddn","pow","copy","_move","clone","_expand","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","out","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","self","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","allocUnsafe","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","input","output","outLen","prev","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","u","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_super","_ref","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","WebSocketBrowserImpl","_EventEmitter","protocols","_this","socket","WebSocket","onopen","emit","onmessage","event","onerror","onclose","optionsOrCallback","send","close","listener","addEventListener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","hasOwnProperty","indexOf","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","_this2","promise","_login","mark","_callee","resp","wrap","_context","sent","abrupt","stop","_x","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","ArrayBuffer","parse","listeners","then","_ref2"],"mappings":"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","file":"static/js/2.3fb8e004.chunk.js","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { createFetchMiddleware, providerFromEngine } from '@toruslabs/base-controllers';\nimport { mergeMiddleware, createAsyncMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport bs58 from 'bs58';\nimport { ethErrors } from 'eth-rpc-errors';\nimport { PublicKey, Connection, Keypair } from '@solana/web3.js';\nimport nacl from '@toruslabs/tweetnacl-js';\n\nfunction createChainIdMiddleware(chainId) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createConfigMiddleware(providerConfig) {\n  const {\n    chainId\n  } = providerConfig;\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\nfunction createJsonRpcClient(providerConfig) {\n  const {\n    rpcTarget\n  } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({\n    rpcTarget\n  });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware,\n    fetchMiddleware\n  };\n}\n\nfunction createGetAccountsMiddleware(_ref) {\n  let {\n    getAccounts\n  } = _ref;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"getAccounts\") return next();\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\"); // This calls from the prefs controller\n\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createRequestAccountsMiddleware(_ref2) {\n  let {\n    requestAccounts\n  } = _ref2;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"requestAccounts\") return next();\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\"); // This calls the UI login function\n\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== targetMethod) return next();\n    if (!handler) throw new Error(\"WalletMiddleware - \".concat(targetMethod, \" not provided\"));\n    const result = await handler(request);\n    response.result = result;\n    return undefined;\n  });\n}\nfunction createSolanaMiddleware(providerHandlers) {\n  const {\n    getAccounts,\n    requestAccounts,\n    signTransaction,\n    signAndSendTransaction,\n    signAllTransactions,\n    signMessage,\n    getPrivateKey,\n    getSecretKey\n  } = providerHandlers;\n  return mergeMiddleware([createRequestAccountsMiddleware({\n    requestAccounts\n  }), createGetAccountsMiddleware({\n    getAccounts\n  }), createGenericJRPCMiddleware(\"signTransaction\", signTransaction), createGenericJRPCMiddleware(\"signAndSendTransaction\", signAndSendTransaction), createGenericJRPCMiddleware(\"signAllTransactions\", signAllTransactions), createGenericJRPCMiddleware(\"signMessage\", signMessage), createGenericJRPCMiddleware(\"solanaPrivateKey\", getPrivateKey), createGenericJRPCMiddleware(\"solanaSecretKey\", getSecretKey)]);\n}\nfunction createChainSwitchMiddleware(_ref3) {\n  let {\n    addNewChainConfig,\n    switchSolanaChain\n  } = _ref3;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"addSolanaChain\", addNewChainConfig), createGenericJRPCMiddleware(\"switchSolanaChain\", switchSolanaChain)]);\n}\nfunction createAccountMiddleware(_ref4) {\n  let {\n    updatePrivatekey\n  } = _ref4;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"updateAccount\", updatePrivatekey)]);\n}\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass BaseInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$3(_objectSpread$3({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    const engine = new JRPCEngine();\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig);\n    engine.push(configMiddleware);\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async lookupNetwork() {\n    const {\n      chainConfig\n    } = this.config;\n    this.update({\n      chainId: chainConfig.chainId\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  getInjectedProviderProxy(_) {\n    return undefined;\n  }\n\n}\n\nconst getBaseProviderHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [],\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async req => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async req => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async req => {\n      var _req$params, _req$params2;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async req => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return {\n        signature: txRes.signature\n      };\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction createInjectedProviderProxyMiddleware(provider) {\n  return createAsyncMiddleware(async (req, res, _next) => {\n    const result = await provider.request(_objectSpread$2({}, req));\n    res.result = result;\n  });\n}\n\nclass PhantomInjectedProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  getInjectedProviderProxy(injectedProvider) {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n\n}\n\nconst getSlopeHandlers = (injectedProvider, getProviderEngineProxy) => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      const {\n        data\n      } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const {\n        data\n      } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async req => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({\n        message: \"Invalid transaction message\"\n      });\n      const {\n        data\n      } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      return txMessage;\n    },\n    signMessage: async req => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async req => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({\n        message: \"Invalid transaction message\"\n      });\n      const {\n        data\n      } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      const chainConfig = await provider.request({\n        method: \"solana_provider_config\",\n        params: []\n      });\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return {\n        signature: res\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params, _req$params2, _data$signatures;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const {\n        length\n      } = allTxns;\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n\n      const {\n        msg,\n        data\n      } = await injectedProvider.signAllTransactions(unsignedTx);\n      if (!data.publicKey || ((_data$signatures = data.signatures) === null || _data$signatures === void 0 ? void 0 : _data$signatures.length) !== length) throw new Error(msg);\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, signature);\n      }\n\n      return allTxns;\n    }\n  };\n  return providerHandlers;\n};\n\nclass SlopeInjectedProxyProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n\n}\n\nconst getSolflareHandlers = (injectedProvider, getProviderEngineProxy) => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider);\n\n  solflareProviderHandlers.signAndSendTransaction = async req => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = await provider.request({\n      method: \"solana_provider_config\",\n      params: []\n    });\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return {\n      signature: res\n    };\n  };\n\n  return solflareProviderHandlers;\n};\n\nclass SolflareInjectedProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n\n}\n\nconst getSolletHandlers = (injectedProvider, getProviderEngineProxy) => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider);\n\n  providerHandlers.signMessage = async req => {\n    const {\n      signature\n    } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n\n  providerHandlers.signAndSendTransaction = async req => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = await provider.request({\n      method: \"solana_provider_config\",\n      params: []\n    });\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return {\n      signature: res\n    };\n  };\n\n  return providerHandlers;\n};\n\nclass SolletInjectedProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n\n}\n\nconst getTorusHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_requestAccounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_requestAccounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async req => {\n      var _req$params;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n    signTransaction: async req => {\n      var _req$params2;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return {\n        signature: response\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params4, _req$params5;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass TorusInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  async lookupNetwork() {\n    if (!this.provider) throw ethErrors.provider.custom({\n      message: \"Torus solana provider is not initialized\",\n      code: 4902\n    });\n    const {\n      chainId\n    } = this.config.chainConfig;\n    const connectedChainId = await this.provider.request({\n      method: \"solana_chainId\"\n    });\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : \"0x\".concat(parseInt(connectedChainId, 10).toString(16));\n    if (chainId !== connectedHexChainId) throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n    this.update({\n      chainId: connectedHexChainId\n    });\n    this.provider.emit(\"connect\", {\n      chainId: this.state.chainId\n    });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  async setupEngine(injectedProvider) {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async handleInjectedProviderUpdate(injectedProvider) {\n    injectedProvider.on(\"accountsChanged\", async accounts => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async chainId => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : \"0x\".concat(parseInt(chainId, 10).toString(16)); // Check if chainId changed and trigger event\n\n      this.configure({\n        chainConfig: _objectSpread$1(_objectSpread$1({}, this.config.chainConfig), {}, {\n          chainId: connectedHexChainId\n        })\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n\n}\n\nasync function getProviderHandlers(_ref) {\n  let {\n    privKey,\n    getProviderEngineProxy\n  } = _ref;\n\n  const keyPairGenerator = () => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n    signTransaction: async req => {\n      var _req$params;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n    signMessage: async req => {\n      var _req$params2;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const _providerEngineProxy = getProviderEngineProxy();\n\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n      const sig = await _providerEngineProxy.request({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())]\n      });\n      return {\n        signature: sig\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params4, _req$params5, _req$params6;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = (_req$params6 = req.params) === null || _req$params6 === void 0 ? void 0 : _req$params6.message;\n\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n\n      return txns;\n    }\n  };\n  return providerHandlers;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass SolanaPrivateKeyProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async enable() {\n    if (!this.state.privateKey) throw ethErrors.provider.custom({\n      message: \"Private key is not found in state, plz pass it in constructor state param\",\n      code: 4902\n    });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({\n      method: \"eth_accounts\"\n    });\n  }\n\n  async setupProvider(privKey) {\n    const providerHandlers = await getProviderHandlers({\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n    });\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async updateAccount(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const existingKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request({\n          method: \"requestAccounts\"\n        })\n      });\n    }\n  }\n\n  async switchChain(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\"\n    });\n    this.configure({\n      chainConfig\n    });\n    const privKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n    await this.setupProvider(privKey);\n  }\n\n  async lookupNetwork() {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const health = await this._providerEngineProxy.request({\n      method: \"getHealth\",\n      params: []\n    });\n    const {\n      chainConfig\n    } = this.config;\n    if (health !== \"ok\") throw WalletInitializationError.rpcConnectionError(\"Failed to lookup network for following rpc target: \".concat(chainConfig.rpcTarget));\n    this.update({\n      chainId: chainConfig.chainId\n    });\n\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", {\n        chainId: this.state.chainId\n      });\n    }\n\n    return this.state.chainId;\n  }\n\n  getChainSwitchMiddleware() {\n    const chainSwitchHandlers = {\n      addNewChainConfig: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const {\n          chainId,\n          chainName,\n          rpcUrls,\n          blockExplorerUrls,\n          nativeCurrency\n        } = req.params;\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"SOL\",\n          tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n        });\n      },\n      switchSolanaChain: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      }\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  getAccountMiddleware() {\n    const accountHandlers = {\n      updatePrivatekey: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const {\n          privateKey\n        } = req.params;\n        await this.updateAccount({\n          privateKey\n        });\n      }\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n\n}\n\n_defineProperty(SolanaPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new SolanaPrivateKeyProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\nclass SolanaWallet {\n  constructor(provider) {\n    _defineProperty(this, \"provider\", void 0);\n\n    this.provider = provider;\n  }\n\n  async requestAccounts() {\n    const accounts = await this.provider.request({\n      method: \"requestAccounts\",\n      params: {}\n    });\n    return accounts;\n  }\n\n  async signAndSendTransaction(transaction) {\n    const {\n      signature\n    } = await this.provider.request({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction\n      }\n    });\n    return {\n      signature\n    };\n  }\n\n  async signTransaction(transaction) {\n    const signedTransaction = await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction\n      }\n    });\n    return signedTransaction;\n  }\n\n  async signAllTransactions(transactions) {\n    const signedTransactions = await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions\n      }\n    });\n    return signedTransactions;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"signMessage\",\n      params: {\n        message: data\n      }\n    });\n    return response;\n  }\n\n  async request(args) {\n    const result = await this.provider.request(args);\n    return result;\n  }\n\n}\n\nexport { PhantomInjectedProvider, SlopeInjectedProxyProvider, SolanaPrivateKeyProvider, SolanaWallet, SolflareInjectedProvider, SolletInjectedProvider, TorusInjectedProvider };\n//# sourceMappingURL=solanaProvider.esm.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {CompiledInstruction, MessageHeader} from './index';\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = 2n ** 64n - 1n;\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","export const URL = globalThis.URL;\nexport const URLSearchParams = globalThis.URLSearchParams;\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction, TransactionStatus} from './transaction';\nimport {Message} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport {URL} from './utils/url-impl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: new Message(result.transaction.message),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {URL} from './url-impl';\n\nexport function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;"],"sourceRoot":""}